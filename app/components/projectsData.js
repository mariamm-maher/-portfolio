export const projectsData = [
  {
    id: 1,
    title: "Medical Clinic Management System",
    iconType: "Hospital",
    isNew: true,
    description:
      "A comprehensive healthcare management platform designed to streamline clinic operations, patient care, and administrative workflows with modern web technologies and enterprise-level security.",
    technologies: [
      "React.js",
      "Node.js",
      "Express.js",
      "MongoDB",
      "JWT Authentication",
      "shadcn/ui",
      "Socket.io",
      "Email Integration",
      "bcrypt",
      "Mongoose ODM",
    ],
    features: [
      "Complete patient registration and medical history management",
      "Doctor scheduling and appointment booking system",
      "Multi-role access control (Admin, Doctor, Nurse, Receptionist)",
      "Digital medical records with advanced search and filtering",
      "Automated email notifications and appointment reminders",
      "Comprehensive analytics dashboard with patient insights",
      "Responsive design optimized for tablets and medical devices",
    ],
    technicalHighlights: [
      "Implemented secure JWT-based authentication with role-based authorization",
      "Built comprehensive RESTful APIs with error handling and validation",
      "Integrated real-time notifications using Socket.io for appointment updates",
      "Developed automated email system for appointment reminders",
      "Created responsive UI optimized for medical staff workflows",
    ],
    backgroundCode: `const PatientModel = require('./models/Patient');\nconst jwt = require('jsonwebtoken');\n\napp.post('/api/patients', auth, async (req, res) => {\n  try {\n    const patient = new PatientModel(req.body);\n    await patient.save();\n    res.status(201).json(patient);\n  } catch (error) {\n    res.status(400).json({ error: error.message });\n  }\n});`,
    floatingCode: "// Secure patient data handling",
    developerComment:
      "Healthcare meets technology - built with enterprise-level security standards",
    easterEgg: "â˜• Built during countless coffee-fueled coding sessions!",
    videoDemo:
      "https://drive.google.com/file/d/19kScTJkVz4hMVA__aKguswlTmeryB14D/view?usp=drive_link",
    liveUrl: null, // Add if deployed
    githubUrl: "https://github.com/mariamm-maher/Clinic-system-Client",
  },
  {
    id: 2,
    title: "Email Chat Application",
    iconType: "MessageCircle",
    isNew: true,
    description:
      "A modern real-time messaging platform featuring both email and chat functionalities with an intuitive user interface. Built as a frontend-only application showcasing advanced React component architecture and responsive design principles.",
    technologies: [
      "Next.js",
      "Tailwind CSS",
      "React Hooks",
      "Context API",
      "Framer Motion",
      "Lucide Icons",
      "Responsive Design",
    ],
    features: [
      "Real-time chat interface with modern UI components",
      "Email-style messaging system with inbox management",
      "Contact list and user profile management",
      "Message search and filtering capabilities",
      "Dark/light theme toggle with smooth transitions",
      "Responsive design optimized for all devices",
      "Interactive animations and micro-interactions",
    ],
    technicalHighlights: [
      "Built responsive chat interface with modern React patterns",
      "Implemented email-style message threading and organization",
      "Created smooth theme switching with CSS variables and animations",
      "Designed reusable component library with consistent styling",
      "Optimized performance with React hooks and context management",
    ],
    backgroundCode: `import { useState, useContext } from 'react';\nimport { ChatContext } from './context/ChatContext';\n\nconst ChatInterface = () => {\n  const [message, setMessage] = useState('');\n  const { sendMessage } = useContext(ChatContext);\n  \n  const handleSend = () => {\n    sendMessage(message);\n    setMessage('');\n  };\n};`,
    floatingCode: "// Real-time messaging magic",
    developerComment:
      "Frontend-only chat app showcasing modern React architecture",
    easterEgg: "ðŸ“§ Who needs WhatsApp when you have custom chat?",
    videoDemo:
      "https://drive.google.com/file/d/14eKg0-hOKRZdF3HsAhJ4UIoa8cXG6ind/view?usp=sharing",
    liveUrl: null,
    githubUrl: "https://github.com/mariamm-maher/Email-App",
  },
  {
    id: 3,
    title: "E-commerce Storefront",
    iconType: "ShoppingCart",
    isNew: true,
    description:
      "A comprehensive online shopping platform with modern e-commerce features and sleek design. Frontend-only implementation demonstrating advanced UI/UX patterns and component reusability. This project is currently presented as a video demo. The live deployed version will be available after deployment.",
    technologies: [
      "Next.js",
      "Tailwind CSS",
      "React Hooks",
      "Context API",
      "Framer Motion",
      "Lucide Icons",
      "CSS Grid & Flexbox",
    ],
    features: [
      "Product catalog with advanced filtering and search",
      "Shopping cart with add/remove/quantity management",
      "Product detail pages with image galleries",
      "User authentication and profile management interfaces",
      "Wishlist and favorites functionality",
      "Responsive checkout flow with form validation",
      "Modern product recommendation system UI",
    ],
    technicalHighlights: [
      "Built complex state management for shopping cart and user preferences",
      "Implemented advanced filtering and search algorithms for product discovery",
      "Created responsive product grid with CSS Grid and Flexbox layouts",
      "Designed comprehensive form validation for checkout process",
      "Optimized image galleries with lazy loading and performance optimization",
    ],
    backgroundCode: `import { useCart } from '../hooks/useCart';\nimport { Product } from '../types/Product';\n\nconst ProductCard = ({ product }: { product: Product }) => {\n  const { addToCart, removeFromCart } = useCart();\n  \n  const handleAddToCart = () => {\n    addToCart(product);\n    toast.success('Added to cart!');\n  };\n};`,
    floatingCode: "// E-commerce made beautiful",
    developerComment: "Frontend showcase of modern e-commerce UX patterns",
    easterEgg: "ðŸ›’ One-click shopping, zero-click debugging needed!",
    videoDemo:
      "https://drive.google.com/file/d/1OgcRP6mUsqTufRD0FYCIVVxOh2D9XhJv/view?usp=sharing",
    liveUrl: null,
    githubUrl: "https://github.com/mariamm-maher/next-ecommerce",
  },
];
